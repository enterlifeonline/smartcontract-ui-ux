const bel = require("bel")
const csjs = require("csjs-inject")

module.exports = loadingAnimation 

function loadingAnimation (colors, text) {
  const css = csjs`
  .loader {
    position: relative;
    width: 100%;
    min-height: 30px;
    margin: 0 auto;
    /* border: 1px solid red; */
  }
  .loaderText {
    text-align: center;
    color: #09FFC3;
    font-size: 1.4rem;
    animation: gradientText 4s linear infinite;
  }
  
  @keyframes gradientText {
    30% {
      color: #6700FF;
    }
    60% {
      color: #00BFFF;
    }
    100% {
      color: #09FFC3;
    }
  }
  .spinner {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
  }
  .spinner span {
    position: absolute;
    left: 0;
    top: 20%;
    display: inline-block;
    opacity: 0;
    width: 8px;
    height: 8px;
    background-color: #6700FF;
    border-radius: 50%;  
    animation: move 4s ease-in-out infinite;
  }
  .spinner span:nth-child(2) {
    animation-delay: .4s;
  }
  .spinner span:nth-child(3) {
    animation-delay: .8s;
  }
  .spinner span:nth-child(4) {
    animation-delay: 1.2s;
  }
  .spinner span:nth-child(5) {
    animation-delay: 1.6s;
  }
  
  @keyframes move {
    0% {
      left: 30%;
      top: -5px;
      transform: rotate3d(0);
      opacity: 0;
    }
    25% {
      transform: rotate3d(-2, 1, -.3, 3turn);
      height: 20px;
      top: 10px;
      opacity: .8;
    }
    50% {
      left: 90%;
      top: 40%;
      width: 22px;
      height: 22px;
      transform: rotate3d(2, -1, -1, 3turn);
      opacity: 1;
      background-color: #00BFFF;
    }
    75% {
      top: 20px;
      transform: rotate3d(-1, .45, 1, 3rad)
      height: 8px;
      width: 8px;
      opacity: .6;
      background-color: #09FFC3;
    }
    100% {
      transform: rotate3d(0);
      top: 30px;
      left: 120px;
      opacity: 0;
    }
  }
  `
  // @TODO: fix theming to not create 10000 style tags for 1000 spinners
  return bel`
  <div class=${css.loader}>
    <div class=${css.loaderText}>${text}</div>
    <div class=${css.spinner}>
      <span></span>
      <span></span>
      <span></span>
      <span></span>
      <span></span>
    </div>
  </div>
  `
}
