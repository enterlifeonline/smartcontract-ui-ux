const bel = require("bel")
const theme = require('theme')
const csjs = require("csjs-inject")
const ethers = require('ethers')
var css
let colors = setTheme('darkTheme')

function setTheme(name) {
  let colors = Object.assign({}, theme(name))
  return colors
}

module.exports = inputPayable

function inputPayable (label) {

  return bel`
    <div class=${css.inputContainer}>
      <label class=${css.inputParam} title="data type: ${label}">value</label>
      <div class=${css.inputArea}>
        <input class=${css.inputField} type="number" placeholder="999" oninput=${validate}>
        ${currencySelector()}
        <div class=${css.ethIcon} title="Select amount you want to send with this function!"><i class="fab fa-ethereum"></i></div>
      </div>
    </div>`
}

  function validate (e) {
    // @TODO
  }

function currencySelector () {
  var button = bel`
    <select class=${css.currency}>
      <option value="wei">wei</option>
      <option value="k-wei">k-wei</option>
      <option value="m-wei">m-wei</option>
      <option value="g-wei">g-wei</option>
      <option value="micro">micro</option>
      <option value="milli">milli</option>
      <option value="ether">ether</option>
      <option value="k-ether">k-ether</option>
      <option value="m-ether">m-ether</option>
      <option value="g-ether">g-ether</option>
      <option value="t-ether">t-ether</option>
    </select>`
  return button
}

css = csjs`
.inputContainer {
  display: grid;
  grid-template: auto / 100px auto;
  margin-bottom: 15px;
}
.inputParam {
  padding: ${colors.inputParamPadding};
  color: ${colors.inputParamColor};
  font-size: ${colors.inputParamFontSize};
  text-align: ${colors.inputParamTextAlign};
}
.inputArea {
  display: grid;
  grid-template: auto / auto auto 30px;
  grid-column-gap: 5px;
}
.inputField {
  background-color: ${colors.inputFieldBackgroundColor};
  border-radius: 2px;
  color: ${colors.inputFieldColor};
  border: ${colors.inputFieldBorder};
  text-align: center;
  font-family: ${colors.bodyFont};
  font-size: ${colors.inputFieldFontSize};
  padding: 5px;
  width: calc(100% - 10px);
}
.inputField::placeholder {
  color: ${colors.inputFieldPlaceholderColor};
}
.currency {
  font-family: ${colors.bodyFont};
  border-radius: ${colors.currencyBorderRadius};
  border: ${colors.currencyBorder};
  padding: 5px 7px;
  color: ${colors.currencyColor};
  background-color: ${colors.currencyBackgroundColor};
  font-size: ${colors.currencyFontSize};
}

.ethIcon {
  color: ${colors.ethIconColor};
  font-size: ${colors.ethIconFontSize};
  text-align: center;
  align-self: center;
}
`
